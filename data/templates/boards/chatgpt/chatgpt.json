{
    "name": "{{{name}}}",
    "icon": "openai",
    "settings": {},
    "layouts": {
        "lg": [
            {
                "w": 36,
                "h": 10,
                "x": 0,
                "y": 0,
                "i": "action_1750256774576",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 36,
                "h": 21,
                "x": 0,
                "y": 6,
                "i": "value_1750256790295",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 41,
                "h": 4,
                "x": 36,
                "y": 0,
                "i": "value_1750261498829",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 41,
                "h": 23,
                "x": 36,
                "y": 4,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "md": [
            {
                "w": 26,
                "h": 10,
                "x": 37,
                "y": 4,
                "i": "action_1750256774576",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 26,
                "h": 14,
                "x": 37,
                "y": 10,
                "i": "value_1750256790295",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 26,
                "h": 4,
                "x": 37,
                "y": 0,
                "i": "value_1750261498829",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 37,
                "h": 24,
                "x": 0,
                "y": 0,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "sm": [
            {
                "w": 2,
                "h": 10,
                "x": 0,
                "y": 19,
                "i": "action_1750256774576",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 17,
                "x": 0,
                "y": 24,
                "i": "value_1750256790295",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 14,
                "i": "value_1750261498829",
                "moved": false,
                "static": false
            },
            {
                "w": 2,
                "h": 14,
                "x": 0,
                "y": 0,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "xs": [
            {
                "w": 1,
                "h": 5,
                "x": 0,
                "y": 19,
                "i": "action_1750256774576",
                "moved": false,
                "static": false
            },
            {
                "w": 1,
                "h": 17,
                "x": 0,
                "y": 24,
                "i": "value_1750256790295",
                "moved": false,
                "static": false
            },
            {
                "w": 1,
                "h": 5,
                "x": 0,
                "y": 14,
                "i": "value_1750261498829",
                "moved": false,
                "static": false
            },
            {
                "w": 1,
                "h": 14,
                "x": 0,
                "y": 0,
                "i": "value_1752225293068",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ]
    },
    "cards": [
        {
            "key": "action_1750256774576",
            "width": 2,
            "height": 10,
            "icon": "openai",
            "name": "Send message",
            "color": "#74AA9C",
            "description": "send a message to chatGPT",
            "params": {
                "preprompt": "preprompt",
                "prompt": "prompt",
                "postprompt": "postprompt"
            },
            "type": "action",
            "displayResponse": false,
            "buttonLabel": "Send",
            "configParams": {
                "preprompt": {
                    "visible": false,
                    "defaultValue": "",
                    "type": "text"
                },
                "prompt": {
                    "visible": true,
                    "defaultValue": "",
                    "type": "text"
                },
                "postprompt": {
                    "visible": false,
                    "defaultValue": "",
                    "type": "text"
                }
            },
            "rulesCode": "execute_action(\"/api/v1/chatgpt/send/prompt\", { message: (userParams.preprompt ?? \"\") + \" \" + (userParams.prompt ?? \"\") + \" \" + (userParams.postprompt ?? \"\") });",
            "html": "//@card/react\n\nfunction Widget(card) {\n  const value = card.value;\n\n  const content = <YStack f={1}  mt={\"20px\"} ai=\"center\" jc=\"center\" width=\"100%\">\n      {card.icon && card.displayIcon !== false && (\n          <Icon name={card.icon} size={48} color={card.color}/>\n      )}\n      {card.displayResponse !== false && (\n          <CardValue mode={card.markdownDisplay ? 'markdown' : 'normal'} value={value ?? \"N/A\"} />\n      )}\n  </YStack>\n\n  return (\n      <Tinted>\n        <ProtoThemeProvider forcedTheme={window.TamaguiTheme}>\n          <ActionCard data={card}>\n            {card.displayButton !== false ? <ParamsForm data={card}>{content}</ParamsForm> : card.displayResponse !== false && content}\n          </ActionCard>\n        </ProtoThemeProvider>\n      </Tinted>\n  );\n}",
            "displayIcon": false
        },
        {
            "key": "value_1750256790295",
            "width": 2,
            "height": 6,
            "icon": "openai",
            "name": "Message response",
            "color": "#74AA9C",
            "description": "chatGPT last chat response",
            "type": "value",
            "rulesCode": "return states?.chatGPT?.conversation?.chatResponse",
            "html": "//@react\nreturn markdown(data)"
        },
        {
            "key": "value_1750261498829",
            "width": 4,
            "height": 4,
            "icon": "key",
            "name": "Key Setter",
            "description": "Displays a key setter for a specific key or in case already set displays key is set",
            "type": "value",
            "params": {
                "nameKey": "The key name to set"
            },
            "configParams": {
                "nameKey": {
                    "visible": true,
                    "defaultValue": "OPENAI_API_KEY"
                }
            },
            "rulesCode": "",
            "html": "\n//@react\nreactCard(`\n  async function validateKey(apiKey) {\n   // return true or false if the key is valid or not\n    return true;\n  }\n\n  function Widget() {\n    return (\n          <View className=\"no-drag\">\n            <KeySetter\n              nameKey={data?.configParams?.nameKey?.defaultValue}\n              validate={validateKey}\n              onAdd={(key) => {\n                settings.set('ai.enabled', true)\n              }}\n              onRemove={(key) => {\n                settings.del('ai.enabled')\n              }}\n            />\n          </View>\n    );\n  }\n\n`, data.domId)\n\n            "
        },
        {
            "key": "value_1752225293068",
            "width": 3,
            "height": 12,
            "icon": "file-text",
            "name": "Read Me",
            "description": "Render formatted markdown using ReactMarkdown",
            "type": "value",
            "editorOptions": {
                "defaultTab": "value"
            },
            "displayFrame": true,
            "rulesCode": "return `# üß† ChatGPT Interaction Board\n\nThis board lets you chat with ChatGPT using the OpenAI API.Follow these simple steps to get started:\n\n## üîë Step 1: Get Your API Key\n\n1. Go to[OpenAI's API Keys page](https://platform.openai.com/account/api-keys).\n2. Log in and click ** \"Create new secret key\" **.\n3. Copy and save your key securely ‚Äî it won't be shown again.\n\n    > ‚ö†Ô∏è ** Keep it secret! ** Your API key is private and usage - based.\n\n## üîë Step 2: Set Your API Key\n\n1. Add your key on Key Setter card and click \"+\" to add. \n\n## üí¨ Step 3: Chat with ChatGPT\n\n- Enter your message in the ** input box **.\n- Click the ** \"Send\" ** button to interact.\n- You‚Äôll receive a response from ChatGPT below.\n\nStart chatting now and build your own AI assistant! üöÄ\n`",
            "html": "//@react\nreturn markdown(data)"
        }
    ],
    "autopilot": false,
    "rules": []
}